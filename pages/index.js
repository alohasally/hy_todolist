import Head from "next/head";
import { useState } from "react";
import axios from "axios";

const url = "http://localhost:3001/api/todo";

export default function Home({ props }) {
  const [todos, setTodos] = useState([]);
  const [todo, setTodo] = useState({ todo: "" });

  const handleChange = ({ currentTarget: input }) => {
    input.value === ""
      ? setTodo({ todo: "" })
      : setTodo((prev) => ({ ...prev, todo: input.value }));
  };

  const editTodo = (id) => {
    const currentTodo = todos.filter((todo) => todo._id === id);
    setTodo(currentTodo[0]);
  };

  const addTodo = async (e) => {
    e.preventDefault();
    try {
      if (todo._id) {
        const { data } = await axios.put(url + "/" + TextTrackList._id, {
          todo: todo.todo,
        });
        const prevTodos = [...todos];
        const index = prevTodos.findIndex((t) => t.id === todo._id);
        prevTodos[index] = data.data;
        setTodos(prevTodos);
        setTodo({ todo: "" });
      } else {
        const { data } = await axios.post(url, task);
        setTodos((prev) => [...prev, data.data]);
        setTodo({ todo: "" });
      }
    } catch (error) {
 
    }
  };

  const completedTodo = async (id) => {
    try {
      const prevTodos = [...todos];
      const index = prevTodos.findIndex((t) => t.id === todo._id);
      const { data } = await axios.put(url + "/" + id, {
        completed: !prevTodos[index].completed,
      });
      prevTodos[index] = data.data;
      setTodos(prevTodos);
    } catch (error) {}
  };

  const deleteTodo = async (id) => {
    try {
      const { data } = await axios.delete(url + "/" + id);
      setTodos((prev) => prev.filter((todo) => todo._id !== id));
    } catch (error) {}
  };
  return (
    <div className="">
      <Head>
        <title>Hy To do list</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <nav className="bg-gray-200 h-12">
        <div className="flex justify-between px-4 py-2  ">
          <h1>
            <a href="https://nextjs.org">Logo</a>
          </h1>
          <a>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="w-6 h-6"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
              />
            </svg>
          </a>
        </div>
      </nav>
      <main className="bg-white h-full w-full ">
        <div className="text-center py-8 bg-gray-300">
          <h1 className="text-gray-900 p-4">오늘 할 일</h1>
          <div className="flex justify-around ">
            <button type="submit" className="px-4 py-2 bg-gray-400">
              삭제하기
            </button>
            <button
              onClick={() => editTodo(todo._id)}
              type="submit"
              className="px-4 py-2 bg-gray-400"
            >
              편집하기
            </button>
            <button type="submit" className="px-4 py-2 bg-gray-400">
              작성하기
            </button>
          </div>
        </div>

        <div className="bg-gray-400">
          <h2>할 일 목록</h2>
          {todos.map((todo) => (
            <div className="" key={todo._id}>
              <input
                type="checkbox"
                className=""
                checked={todo.completed}
                onChange={() => completedTodo(todo._id)}
              />
              <button onClick={() => editTodo(todo._id)} className="">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="w-6 h-6"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0"
                  />
                </svg>
              </button>
              <button onClick={() => deleteTodo(todo._id)} className="">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="w-6 h-6"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125"
                  />
                </svg>
              </button>
            </div>
          ))}
        </div>

        <div className="">
          <form onSubmit={addTodo}>
            <label>해야할 일</label>
            <input
              className=""
              type="text"
              onChange={handleChange}
              placeholder="할 일을 입력하세요"
              value={todo.todo}
            ></input>
          </form>
          <form>
            <label>중요한 일</label>
            <input className="" type="checkbox" value={todo.todo}></input>
            <label>중요하지 않은 일</label>
            <input className="" type="checkbox" value={todo.todo}></input>
          </form>
          <button type="submit" className="px-4 py-2 bg-gray-400">
            {todo._id ? "updatedTodo" : "createdTodo"}
            작성 완료
          </button>
        </div>
      </main>

      <footer className=""></footer>
    </div>
  );
}

// export const getServerSideProps = async () => {
//   const { data } = await axios.get(url);

//   return {
//     props: {
//       data,
//     },
//   };
// };

// export const getServerSideProps = async() => {
//   const { data } = await axios.get(url);
//   return {
//     props:{
//       todos: data.data
//     }
//   }
// }
